what is abstraction?

  Abstraction:
       
       It is process of hiding the implementaion details and showing only functionality to the user.
       It is used for business logic
What is ADT?
   
   ADT :

      -> It is an abstract data type.
      -> It is type for objects.
      -> ADT only mentions what operations are to be perfromed but not how these operations will be implemented.
      -> It  does not specify how data will be organized in memeory and what alogorithms will be used for implementing the operations.

    ADTs namely List ADT, Stack ADT, Queue ADT.

     List ADT:

        The data is generally stored in key sequence in a list .

         operations performed on List ADT are:
           
           add()
           remove()
           get()
           search()
           replace()
           isEmpty()
           isFull()

     Stack ADT:

        In Stack ADT Implementation instead of data being stored in each node, the pointer to data is stored.

         operations performed on Stack ADT are:

            push()
            pop()
            peek()
            isEmpty()
            size()
            isFull()
      
     Queue ADT:

       The queue abstract data type  follows the basic design of the stack abstract data type.

        operations performed on Queue ADT are:

            enqueue()
            dequeue()
            peek()
            isEmpty()
            size()
            isFull()

   Advantages:

     1. Encapsultions
     2. Abstraction
     3. Information hiding        
     4. Modularity : ADT can combine with other ADTs to form more complex data, it increases flexibility.


  Disadvantages:

     1. Complexity
     2. Limited flexibility
     3. cost: reqquires additional resources and investment.
     4  Overhead: ADT can add memory and processing , which can affect performance.


What is data structure?

      -> It tell how the data is stored in the memory.
      -> Every data structure is having its own advantages and disadvantages.

Collection FrameWork:

     -> In Data structures we have collections.
     -> Collection are  high quality and high performance.
     -> collection framework contains arraylist,linkedlist, stack,vector,queue etc...
     -> collections are fast, high quality and well tested.       
     -> Development costs are reduced, because data structures and algorithms are reusable.



  